<?xml version="1.0" encoding="UTF-8"?>
<ctl:package
 xmlns="http://www.occamlab.com/ctl"
 xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
 xmlns:ctl="http://www.occamlab.com/ctl"
 xmlns:parsers="http://www.occamlab.com/te/parsers"
 xmlns:p="http://teamengine.sourceforge.net/parsers"
 xmlns:saxon="http://saxon.sf.net/"
 xmlns:csw="http://www.opengis.net/cat/csw/2.0.2"
 xmlns:xi="http://www.w3.org/2001/XInclude">

    <ctl:test name="csw:GetCapabilities-GET">
      <param name="csw.capabilities.doc" />
      <ctl:assertion>
      Run test group for GetCapabilities requests using the GET method.
      </ctl:assertion>
      <ctl:code>
        <xsl:variable name="csw.GetCapabilities.get.url">
		    <xsl:value-of select="$csw.capabilities.doc//ows:OperationsMetadata/ows:Operation[@name='GetCapabilities']/ows:DCP/ows:HTTP/ows:Get/@xlink:href"/>
		</xsl:variable>
        <ctl:message>Target endpoint is <xsl:value-of select="$csw.GetCapabilities.get.url"/></ctl:message>
        
  <ctl:call-test name="csw:csw-2.0.2-GetCapabilities-tc1.1">
    <ctl:with-param name="csw.GetCapabilities.get.url" select="$csw.GetCapabilities.get.url"/>
  </ctl:call-test>
      </ctl:code>
    </ctl:test>

	<test name="csw:csw-2.0.2-GetCapabilities-tc1.1">
		<param name="csw.GetCapabilities.get.url" />
		<assertion>
			All OGC web services must implement GetCapabilities using the GET
			method.
			This tests requires version 2.0.2 of the Capabilities, by explicitely
			setting the 'AcceptVersions' parameter. Note that the response to a 
			GetCapabilities request without the optional version
			parameter must include a complete representation of the capabilities
			document corresponding to the latest supported version, what could be
			3.0, or later.
		</assertion>
		<comment>Pass if the response is schema valid and has no missing
			elements.</comment>
		<link>OGC 05-008c1, ยง7.1 (p.10), ยง7.4.2 (p.19)</link>
		<code>
			<xsl:variable name="response">
				<request>
					<url>
						<xsl:value-of select="$csw.GetCapabilities.get.url" />
					</url>
					<method>GET</method>
					<param name="service">CSW</param>
					<param name="request">GetCapabilities</param>
					<param name="AcceptVersions">2.0.2</param>
					<!-- <param name="version">2.0.2</param> -->
				</request>
			</xsl:variable>

			<xsl:choose>
				<xsl:when test="not($response/*)">
					<ctl:message>FAILURE: Missing response entity.</ctl:message>
					<ctl:fail />
				</xsl:when>
				<xsl:otherwise>
					<xsl:choose>
						<xsl:when test="not($response//ows:ExtendedCapabilities/*)">
							<!-- validate $response with standard CSW schema(tron) only -->
							<ctl:call-test name="ctl:XMLValidatingParser.CSW">
								<ctl:with-param name="doc" select="$response" />
							</ctl:call-test>
							<ctl:call-test name="ctl:SchematronValidatingParser">
								<ctl:with-param name="doc" select="$response" />
								<ctl:with-param name="schema">/sch/csw/2.0.2/Capabilities.sch</ctl:with-param>
								<ctl:with-param name="phase">DefaultPhase</ctl:with-param>
							</ctl:call-test>
						</xsl:when>
						<xsl:otherwise>
							<!-- validate all with internal hints... -->
							<ctl:call-test name="ctl:XMLValidatingParser.HINTS">
								<ctl:with-param name="doc" select="$response" />
							</ctl:call-test>
							<!-- ... prune ExtCap and... -->
							<xsl:variable name="prune-xsl" select="tec:findXMLResource($te:core, '/csw-prune.xsl')" />
							<xsl:variable name="standardCap" select="saxon:transform(saxon:compile-stylesheet($prune-xsl), $response)" />
							<!-- possible alternative: use XSLTransformationParser
							 <parsers:XSLTransformationParser>
								<xsl:stylesheet/>|<xsl:transform/>
							</parsers:XSLTransformationParser> -->
							<!-- ... validate standardCap with CSW schema(tron) -->
							<ctl:call-test name="ctl:XMLValidatingParser.CSW">
								<ctl:with-param name="doc" select="$standardCap" />
							</ctl:call-test>
							<ctl:call-test name="ctl:SchematronValidatingParser">
								<ctl:with-param name="doc" select="$standardCap" />
								<ctl:with-param name="schema">/sch/csw/2.0.2/Capabilities.sch</ctl:with-param>
								<ctl:with-param name="phase">DefaultPhase</ctl:with-param>
							</ctl:call-test>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:otherwise>
			</xsl:choose>
		</code>
	</test>
    
</ctl:package>
